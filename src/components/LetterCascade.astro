---
interface Props {
  text: string;
  delay?: string;
}

const { text, delay = "0ms" } = Astro.props;
let letterIndex = 0;
---

<div class="whitespace-nowrap">
  {
    text.split(" ").map((word) => {
      return (
        <>
          <div class="inline-block">
            {word.split("").map((letter) => {
              letterIndex++;
              return (
                <span
                  class="letter inline-block"
                  style={`--animation-order: ${letterIndex}; --animation-delay: ${delay}`}
                  set:html={letter}
                />
              );
            })}
          </div>
        </>
      );
    })
  }
</div>

<style>
  @keyframes slideDown {
    0% {
      opacity: 0;
      transform: translateY(-0.6em);
    }

    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .letter {
    animation: slideDown 0.5s ease;
    animation-fill-mode: backwards;
    animation-delay: calc(var(--animation-order) * 70ms + var(--animation-delay));
  }
</style>
